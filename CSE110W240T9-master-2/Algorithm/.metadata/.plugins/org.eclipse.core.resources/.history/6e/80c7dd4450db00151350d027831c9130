import java.util.ArrayList;

public class StaticEventList implements CalendarEventList{

	private ArrayList<StaticEvent> staticList; //list of all static events
	private ArrayList<CalendarEvent> events; //list to store all events in one given day
	
	public StaticEventList() {
		this.staticList = new ArrayList<StaticEvent>();
	}
	
	public ArrayList<StaticEvent> getList() {
		return staticList;
	}
	
	public void clearEvents(){
		events.clear();
	}

	public void setList(ArrayList<StaticEvent> list) {
		this.staticList = list;
	}

	public boolean addEvent(StaticEvent event) throws CalendarError {
		boolean check = true;
		if (event == null){
			check = false;
			throw new CalendarError("Null Event");
		}
		this.staticList.add(event);
		return check;
	}
	
//	public boolean removeEvent(String Id) throws CalendarError{
//		boolean check = true;
//		if (event == null){
//			check = false;
//			throw new CalendarError("Null Event");
//		}
//		list.remove(event);
//		return check;
//	}

	public ArrayList<CalendarEvent> getEvents() {
		return events;
	}

	public void setEvents(ArrayList<CalendarEvent> events) {
		this.events = events;
	}
	
    public ArrayList<CalendarEvent> getEventsByDate (String dateKey) throws CalendarError {
		if (dateKey == null)
			throw new CalendarError("Null Event");
		events = new ArrayList<CalendarEvent>();
		for(int i=0; i<staticList.size(); i++){
			if(staticList.get(i).getDateKey().contains(dateKey)){
				
			}
		}
		return events;
	}
    
    public boolean removeEventById(String id) throws CalendarError {
    	boolean check = false;
		if (id == null)
			throw new CalendarError("Null Event");
		StaticEvent eventToRemove;
		for (int i = 0; i< staticList.size(); i++){
			eventToRemove = staticList.get(i);
			  if (eventToRemove.getId().contains(id)){
			    staticList.remove(eventToRemove);
			    check = true;
			  }
		}
		return check;
	}
}
